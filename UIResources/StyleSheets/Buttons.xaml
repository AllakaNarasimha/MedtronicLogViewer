<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:VLEXClient">

	<Style TargetType="{x:Type Button}" x:Key="Hoverless">
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="BorderThickness" Value="0"/>
	</Style>
	<Style x:Key="closeButton" TargetType="{x:Type Button}">
		<Setter Property="OverridesDefaultStyle" Value="true"/>
		<Setter Property="Height" Value="13"/>
		<Setter Property="Width" Value="13"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Border Name="Border" CornerRadius="0" BorderThickness="0"
                    Background="White"
                    BorderBrush="White">
						<ContentPresenter Margin="2" 
                                 HorizontalAlignment="Center"
                                 VerticalAlignment="Center" 
                                 RecognizesAccessKey="True"/>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter Property="Cursor" Value="Hand" />
							<Setter TargetName="Border" Property="Background" Value="#ffff"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

    <Style x:Key="uxBtn" TargetType="{x:Type Button}">
        <Setter Property="FontSize" Value="15"/>
		<Setter Property="Width" Value="140"/>
		<Setter Property="Height" Value="32"/>
        <Setter Property="BorderBrush" Value="#06a9e0"/>
		<Setter Property="TextOptions.TextHintingMode" Value="Fixed"/>
		<Setter Property="FontStyle" Value="Normal"/>
		<Setter Property="HorizontalAlignment" Value="Center"/>
		<Setter Property="FontWeight" Value="Normal"/>
		<Setter Property="FontStretch" Value="Normal"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="Foreground" Value="#ffffff"/>
		<Setter Property="Background" Value="#06a9e0"/>
	</Style>
	
    <Style x:Key="uxDisabledBtn" BasedOn="{StaticResource uxBtn}" TargetType="{x:Type Button}">
		<Setter Property="Background" Value="#b2b4b3"/>
        <Setter Property="BorderBrush" Value="#b2b4b3"/>
	</Style>
	
    <Style x:Key="uxHoverBtn" BasedOn="{StaticResource uxBtn}" TargetType="{x:Type Button}">
		<Setter Property="Background" Value="#6ed0f2"/>
        <Setter Property="BorderBrush" Value="#6ed0f2"/>

</Style>

	<!--Window Control button-->
	<Style TargetType="{x:Type Button}" x:Key="EmptyButton">
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="Padding" Value="8"/>

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}">
						<ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<Trigger Property="IsMouseOver" Value="true">
				<Setter Property="Background" Value="{StaticResource BackgroundLightBrush}"/>
			</Trigger>
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Opacity" Value=".5"/>
			</Trigger>
		</Style.Triggers>
	</Style>

	<!--Window Control button-->
	<Style TargetType="{x:Type Button}" x:Key="WindowControlButton">
		<Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"/>
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="Padding" Value="8"/>
		<Setter Property="LayoutTransform">
			<Setter.Value>
				<ScaleTransform ScaleX="1.4"/>
			</Setter.Value>
		</Setter>

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}">
						<ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<Trigger Property="IsMouseOver" Value="true">
				<Setter Property="Background" Value="{StaticResource BackgroundLightBrush}"/>
                <Setter Property="BorderBrush" Value="{StaticResource BackgroundLightBrush}"/>
            </Trigger>

		</Style.Triggers>
	</Style>

	<!--Window Close button-->
	<Style TargetType="{x:Type Button}" x:Key="CloseButton" BasedOn="{StaticResource WindowControlButton}">
		<Style.Triggers>
			<Trigger Property="IsMouseOver" Value="True">
				<Setter Property="Background" Value="Red"/>
				<Setter Property="Foreground" Value="{StaticResource ForegroundLightBrush}"/>
			</Trigger>
		</Style.Triggers>
	</Style>

    <!--Dialog Close button-->
    <Style TargetType="{x:Type Button}" x:Key="DialogCloseButton" BasedOn="{StaticResource WindowControlButton}">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="WhiteSmoke"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--Maximize button-->
    <Style x:Key="MaximizeButtonStyle" TargetType="Button"  BasedOn="{StaticResource WindowControlButton}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}">
                        <Rectangle HorizontalAlignment="Center" Fill="Transparent"  x:Name="Maximize" Stroke="Black"  Height="12"  Width="12"  />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" Value="{StaticResource BackgroundLightBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="BlueBtn" TargetType="Button">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="FontSize" Value="15px"/>
		<Setter Property="FontStyle" Value="Normal"/>
        <Setter Property="FontFamily" Value="Effra-Regular"/>
        <Setter Property="FontWeight" Value="Normal"/>
		<Setter Property="FontStretch" Value="Normal"/>
		<Setter Property="Background" Value="#06a9e0"/>
        <Setter Property="BorderBrush" Value="#06a9e0"/>
        <Setter Property="Foreground" Value="#ffffff"/>
		<Setter Property="Height" Value="32"/>
		<Setter Property="Width" Value="140"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button">
					<Border Name="border"
BorderThickness="1"
Padding="4,2"
BorderBrush="#06a9e0"
CornerRadius="0"
Background="{TemplateBinding Background}">
						<Grid >
							<ContentPresenter HorizontalAlignment="Center"
                           VerticalAlignment="Center" Name="content"/>
						</Grid>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="border" Property="BorderBrush" Value="#6ed0f2" />
							<Setter Property="Foreground" Value="White" />
						</Trigger>
						<Trigger Property="IsDefaulted" Value="True">
							<Setter TargetName="border" Property="BorderBrush" Value="#FF06A9E0" />
						</Trigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter TargetName="border" Property="BorderBrush" Value="#b2b4b3" />
							<Setter Property="Background" Value="#b2b4b3"/>
							<Setter Property="Foreground" Value="#ffffff"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
	<Style x:Key="LongButton" TargetType="Button" BasedOn="{StaticResource BlueBtn}">
		<Setter Property="Width" Value="145"/>
		<Setter Property="Height" Value="27"/>

	</Style>
	
	<Style x:Key="GrayBtn" TargetType="Button">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="FontSize" Value="15px"/>
		<Setter Property="FontStyle" Value="Normal"/>
		<Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="FontFamily" Value="Effra-Regular"/>
        <Setter Property="FontStretch" Value="Normal"/>
		<Setter Property="Background" Value="#e8e8e7"/>
        <Setter Property="BorderBrush" Value="#e8e8e7"/>
		<Setter Property="Foreground" Value="#000100"/>
		<Setter Property="Height" Value="32"/>
		<Setter Property="Width" Value="140"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button">
					<Border Name="border"
BorderThickness="1"
Padding="4,2"
BorderBrush="#e8e8e7"
CornerRadius="0"
Background="{TemplateBinding Background}">
						<Grid >
							<ContentPresenter HorizontalAlignment="Center" 
                           VerticalAlignment="Center" Name="content"/>
						</Grid>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

    <Style TargetType="{x:Type Button}" x:Key="IsMouseOverButton">
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="Foreground" Value="#06a9e0"/>
		<Setter Property="ContentTemplate">
			<Setter.Value>
				<DataTemplate>
					<TextBlock  Text="{TemplateBinding Content}"/>
				</DataTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Border Background="{TemplateBinding Background}" BorderBrush="Transparent" BorderThickness="0">
						<ContentPresenter HorizontalAlignment="Left" VerticalAlignment="Center"/>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<Trigger Property="IsMouseOver" Value="True">
				<Setter Property="Background" Value="Transparent"/>
				<Setter Property="Cursor" Value="Hand"/>
				<Setter Property="Foreground" Value="#004a86"></Setter>
			</Trigger>
		</Style.Triggers>
	</Style>

    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
    <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
    <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
    <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
    <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
    <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
    <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
    <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
    <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
    <Style x:Key="SavePdfButton" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
        <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>